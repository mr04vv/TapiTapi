# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
jobs:
  check:
    docker:
      # specify the version you desire here
      - image: circleci/node:10.15.3

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # - run: yarn test
      - run: yarn lint

  deploy:
    docker:
      - image: circleci/node:10.15.3

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          key: v1-yarn-{{ checksum "yarn.lock" }}
      - run: yarn install

      - save_cache:
          key: v1-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules
      - run: yarn build

      # - run:
      #     name: Install newer version of awscli
      #     command: |
      #       sudo apt-get install python-dev python-pip
      #       pip install awscli --user
      #       pip install docutils==0.14
      # - run:
      #     name: Deploy to S3 if tests pass and branch is Master
      #     command: /home/circleci/.local/bin/aws s3 sync ./build s3://$S3_BUCKET_NAME/ --delete --exclude=".git/*" --exclude=".circleci/*" --exclude="node_modules/*" --exclude="README.md" --region=ap-northeast-1
      # - run:
      #     name: Invalidate CloudFront
      #     command: |
      #       /home/circleci/.local/bin/aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths '/*'

workflows:
  version: 2
  build-deploy:
    jobs:
      - check
      - deploy:
          requires:
            - check
          filters:
            branches:
              only: master